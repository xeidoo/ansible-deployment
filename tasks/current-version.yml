---

- name: current version | Ensure shared dirs are present and ensure right permissions
  file:
    path="{{ deployment_shared_dir }}/{{ item }}"
    owner="{{ deployment_user }}"
    group="{{ deployment_group }}"
    mode="{{ deployment_dir_perm }}"
    state="directory"
  when: deployment_shared_dirs != "none"
  with_items: "{{ deployment_shared_dirs }}"
  notify:
     - restart app

- name: current version | Ensure symlinks for shared dirs are present
  file:
    src="{{ deployment_shared_dir }}/{{ item }}"
    dest="{{ deployment_dir_work }}/{{ item }}"
    owner="{{ deployment_user }}"
    group="{{ deployment_group }}"
    mode="0755"
    state="link"
  when: deployment_shared_dirs != "none"
  with_items: "{{ deployment_shared_dirs }}"
  notify:
     - restart app

- name: current version | Create current symlink
  file:
    src="{{ deployment_dir_work }}"
    dest="{{ deployment_dir_current }}"
    owner="{{ deployment_user }}"
    group="{{ deployment_group }}"
    mode="0755"
    state="link"
  register: symlink_update
  notify:
     - restart app

- name: current version | Create deployment date file
  copy:
    content=""
    dest="{{ deployment_dir_current }}/{{ current_date.stdout }}.deployment.date"
    owner="{{ deployment_user }}"
    group="{{ deployment_group }}"
  when: symlink_update.changed

- name: current version | Check for temporary folders
  stat: path={{ deployment_dir_work }}_bak
  register: gh_releases_temp
  when: deployment_overwrite

- name: current version | Remove temporary folders
  file:
    path="{{ deployment_dir_work }}_bak"
    state=absent
  when: deployment_overwrite and gh_releases_temp.stat.exists
